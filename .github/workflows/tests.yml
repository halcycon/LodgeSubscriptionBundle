name: Tests

on:
  push:
    branches:
      - main
      - '[0-9]+\.[0-9]+'
  pull_request:

env:
  PLUGIN_DIR: plugins/LodgeSubscriptionBundle

jobs:
  phpunit:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-versions: ['8.0']
        db-types: ['mysql']
        mautic-versions: ['6.0']
      
    name: Tests on PHP ${{ matrix.php-versions }}, ${{ matrix.db-types }}, Mautic ${{ matrix.mautic-versions }}
    
    services:
      database:
        image: ${{ matrix.db-types == 'mysql' && 'mysql:5.7' || 'mariadb:10.3' }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: mautictest
        ports:
          - 3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    steps:
      - name: Checkout Mautic
        uses: actions/checkout@v3
        with:
          repository: mautic/mautic
          ref: ${{ matrix.mautic-versions }}
      
      - name: Checkout plugin
        uses: actions/checkout@v3
        with:
          path: ${{ env.PLUGIN_DIR }}
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql
          coverage: pcov
      
      - name: Set environment
        run: |
          echo "SYMFONY_ENV=test" >> $GITHUB_ENV
          echo "MAUTIC_ENV=test" >> $GITHUB_ENV
      
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress
      
      - name: Install Mautic
        env:
          DB_PORT: ${{ job.services.database.ports[3306] }}
        run: |
          cp ./.github/ci-files/local.php ./app/config/local.php
          php bin/console mautic:install --force http://localhost
      
      - name: Install Plugins
        env:
          DB_PORT: ${{ job.services.database.ports[3306] }}
        run: php bin/console mautic:plugins:install --env=dev
      
      - name: Run Code Style check
        run: bin/php-cs-fixer fix ${{ env.PLUGIN_DIR }} --config=.php-cs-fixer.php -v --dry-run --show-progress=dots --diff
      
      - name: PHPSTAN
        run: composer phpstan -- ${{ env.PLUGIN_DIR }}
      
      - name: Rector
        run: composer rector -- --dry-run --no-progress-bar ${{ env.PLUGIN_DIR }}
      
      - name: Twig Lint
        run: bin/console lint:twig ${{ env.PLUGIN_DIR }}
      
      - name: Run PHPUNIT tests
        env:
          DB_PORT: ${{ job.services.database.ports[3306] }}
        run: XDEBUG_MODE=coverage APP_DEBUG=0 php -dpcov.enabled=1 -dpcov.directory=. -dpcov.exclude="~tests|themes|vendor~" bin/phpunit -d memory_limit=1G --bootstrap vendor/autoload.php --configuration ${{ env.PLUGIN_DIR }}/phpunit.xml --coverage-clover=${{ env.PLUGIN_DIR }}/coverage.xml --coverage-text
      
      - name: Coverage report
        run: cat ${{ env.PLUGIN_DIR }}/coverage.xml
      
      - name: Upload coverage report
        if: ${{ matrix.php-versions == '8.0' && matrix.db-types == 'mysql' && matrix.mautic-versions == '6.0' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          working-directory: ${{ env.PLUGIN_DIR }}
          verbose: true
      
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: mautic-logs
          path: var/logs/ 